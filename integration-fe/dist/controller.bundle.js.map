{"version":3,"sources":["webpack:///controller.bundle.js","webpack:///webpack/bootstrap 7a7901a68a63162781a9?6132*","webpack:///./src/js/controller.js","webpack:///./src/js/utils.service.js?6ac3","webpack:///./src/js/config.service.js?6b44"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","registerApplication","uiService","SYMPHONY","services","subscribe","modulesService","registerExtension","params","appId","label","listService","implement","trigger","url","host","context","configurationId","botUserId","show","title","_config2","app_title","join","canFloat","helloController","application","register","dependencies","then","_utils","_config","Utils","getParameterByName","window","location","protocol","hostname","port","remote","hello","79","copyToClipboard","target","cb","textarea","document","createElement","style","position","top","left","width","height","padding","border","outline","boxShadow","background","fontSize","webhookUrl","querySelector","dataset","copytarget","getAttribute","value","parentNode","appendChild","select","execCommand","innerHTML","setTimeout","removeChild","getElementsByTagName","err","console","error","Object","defineProperty","pub","userRooms","timestampToDate","_ts","date","Date","Number","monthNames","month","getMonth","getDate","getFullYear","_name","_url","name","href","replace","regex","RegExp","results","exec","decodeURIComponent","normalizeInstanceList","rawInstanceList","instances","op","JSON","parse","optionalProperties","push","instanceId","lastPosted","lastPostedDate","created","createdDate","streamType","streams","postingLocationRooms","notPostingLocationRooms","map","instance","stream","filter","userRoom","threadId","idx","aux","slice","k","n","length","i","j","l","splice","s","getUserRooms","rooms","regExp","userIsOwner","creatorPrettyName","memberCount","publicRoom","roomType","freeze","91","app_name","IM_shorthand","toogleSetupInstructions","logo"],"mappings":"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","file":"controller.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _utils = __webpack_require__(79);\n\t\n\tvar _config = __webpack_require__(91);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar params = {\n\t  appId: _utils.Utils.getParameterByName('id'),\n\t  configurationId: _utils.Utils.getParameterByName('configurationId'),\n\t  botUserId: _utils.Utils.getParameterByName('botUserId'),\n\t  context: _utils.Utils.getParameterByName('context') ? '/' + _utils.Utils.getParameterByName('context') : '',\n\t  host: window.location.protocol + '//' + window.location.hostname + ':' + window.location.port\n\t};\n\t\n\tvar dependencies = ['ui', 'modules', 'applications-nav', 'account', 'integrationConfigService', 'stream-service', 'integration-config'];\n\t\n\t// create our own service\n\tvar listService = SYMPHONY.services.register(params.appId + ':controller');\n\t\n\tfunction registerApplication() {\n\t  // system services\n\t  var uiService = SYMPHONY.services.subscribe('ui');\n\t  var modulesService = SYMPHONY.services.subscribe('modules');\n\t\n\t  uiService.registerExtension('app-settings', params.appId, params.appId + ':controller', { label: 'Configure' });\n\t\n\t  listService.implement({\n\t    trigger: function trigger() {\n\t      var url = [params.host + params.context + '/app.html', '?configurationId=' + params.configurationId, '&botUserId=' + params.botUserId, '&id=' + params.appId];\n\t\n\t      // invoke the module service to show our own application in the grid\n\t      modulesService.show(params.appId, { title: _config2.default.app_title }, params.appId + ':controller', url.join(''), { canFloat: true });\n\t    }\n\t  });\n\t}\n\t\n\tfunction helloController() {\n\t  SYMPHONY.application.register(params.appId, dependencies, [params.appId + ':controller']).then(registerApplication);\n\t}\n\t\n\tSYMPHONY.remote.hello().then(helloController);\n\n/***/ },\n\n/***/ 79:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.copyToClipboard = copyToClipboard;\n\t/* eslint-disable no-console*/\n\t/* eslint-disable no-debugger */\n\tvar Utils = exports.Utils = function utils() {\n\t  var pub = {};\n\t  var userRooms = [];\n\t\n\t  var timestampToDate = function timestampToDate(_ts) {\n\t    var date = new Date(Number(_ts));\n\t    var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\t    var month = monthNames[date.getMonth()];\n\t    return month + ' ' + date.getDate() + ', ' + date.getFullYear();\n\t  };\n\t\n\t  pub.getParameterByName = function (_name, _url) {\n\t    var name = _name,\n\t        url = _url;\n\t\n\t    if (!url) url = window.location.href;\n\t    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n\t    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n\t    var results = regex.exec(url);\n\t    if (!results) return null;\n\t    if (!results[2]) return '';\n\t    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n\t  };\n\t\n\t  pub.normalizeInstanceList = function (rawInstanceList) {\n\t    var instances = [];\n\t    var op = void 0; // parsed optional properties\n\t    for (var obj in rawInstanceList) {\n\t      if (obj) {\n\t        op = JSON.parse(rawInstanceList[obj].optionalProperties);\n\t        instances.push({\n\t          instanceId: rawInstanceList[obj].instanceId,\n\t          name: rawInstanceList[obj].name,\n\t          lastPosted: op.lastPostedDate ? timestampToDate(op.lastPostedDate) : 'not available',\n\t          created: rawInstanceList[obj].createdDate ? timestampToDate(rawInstanceList[obj].createdDate) : 'not available',\n\t          streamType: op.streamType,\n\t          streams: op.streams || [],\n\t          postingLocationRooms: [],\n\t          notPostingLocationRooms: []\n\t        });\n\t      }\n\t    }\n\t\n\t    // store all posting location rooms into instances...\n\t    instances.map(function (instance) {\n\t      if (instance.streamType === 'CHATROOM') {\n\t        instance.streams.map(function (stream) {\n\t          return instance.postingLocationRooms.push(userRooms.filter(function (userRoom) {\n\t            return stream === userRoom.threadId;\n\t          })[0]);\n\t        });\n\t      }\n\t      return instance;\n\t    });\n\t\n\t    // stores all indexes of the rooms (object) that are not posting locations into an array\n\t    var idx = void 0,\n\t        aux = void 0;\n\t\n\t    instances.map(function (instance) {\n\t      idx = [];\n\t      aux = userRooms.slice();\n\t      instance.streams.map(function (stream) {\n\t        for (var k = 0, n = aux.length; k < n; k += 1) {\n\t          if (aux[k].threadId === stream) {\n\t            idx.push(k);\n\t          }\n\t        }\n\t        return idx;\n\t      });\n\t      // remove from the user rooms array all those are posting locations rooms\n\t      for (var i = 0, n = aux.length; i < n; i += 1) {\n\t        for (var j = 0, l = idx.length; j < l; j += 1) {\n\t          if (i === idx[j]) {\n\t            aux.splice(i, 1);\n\t            idx.splice(j, 1);\n\t            for (var k = 0, s = idx.length; k < s; k += 1) {\n\t              idx[k] -= 1;\n\t            }i -= 1;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      instance.notPostingLocationRooms = aux.slice();\n\t      return instance;\n\t    });\n\t    return instances;\n\t  };\n\t\n\t  pub.getUserRooms = function (rooms) {\n\t    var regExp = /\\//g;\n\t\n\t    for (var obj in rooms) {\n\t      if (rooms[obj].userIsOwner) {\n\t        rooms[obj].threadId = rooms[obj].threadId.replace(regExp, '_').replace('==', '');\n\t        userRooms.push({\n\t          threadId: rooms[obj].threadId,\n\t          name: rooms[obj].name,\n\t          creatorPrettyName: rooms[obj].creatorPrettyName,\n\t          memberCount: rooms[obj].memberCount,\n\t          publicRoom: rooms[obj].publicRoom,\n\t          streamType: rooms[obj].roomType\n\t        });\n\t      }\n\t    }\n\t    return userRooms;\n\t  };\n\t  return pub;\n\t}();\n\t\n\tfunction copyToClipboard(target, cb) {\n\t  // Copy to clipboard without displaying an input...\n\t  var textarea = document.createElement('textarea');\n\t  textarea.style.position = 'relative';\n\t  textarea.style.top = 0;\n\t  textarea.style.left = 0;\n\t  textarea.style.width = '1px';\n\t  textarea.style.height = '1px';\n\t  textarea.style.padding = 0;\n\t  textarea.style.border = 0;\n\t  textarea.style.outline = 0;\n\t  textarea.style.boxShadow = 0;\n\t  textarea.style.background = 'transparent';\n\t  textarea.style.fontSize = 0;\n\t\n\t  var webhookUrl = document.querySelector(target.dataset.copytarget) ? document.querySelector(target.dataset.copytarget).getAttribute('data-value') : null;\n\t\n\t  textarea.value = webhookUrl;\n\t\n\t  if (textarea) {\n\t    target.parentNode.appendChild(textarea);\n\t    textarea.select();\n\t    try {\n\t      // copy text\n\t      document.execCommand('copy');\n\t      target.innerHTML = 'Copied!';\n\t      setTimeout(function () {\n\t        target.innerHTML = 'Copy URL';\n\t        target.parentNode.removeChild(target.parentNode.getElementsByTagName('textarea')[0]);\n\t        cb(true);\n\t      }, 2000);\n\t    } catch (err) {\n\t      console.error(err);\n\t    }\n\t  } else {\n\t    console.error('element not found ' + textarea);\n\t  }\n\t}\n\t\n\tObject.freeze(Utils);\n\n/***/ },\n\n/***/ 91:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  app_title: 'Configure JIRA',\n\t  app_name: 'JIRA',\n\t  IM_shorthand: 'JIRA', // will display \"One on One with JIRA\"\n\t  toogleSetupInstructions: true,\n\t  logo: 'jira_logo.png'\n\t};\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** controller.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7a7901a68a63162781a9\n **/","import { Utils } from './utils.service';\nimport config from './config.service';\n\nconst params = {\n  appId: Utils.getParameterByName('id'),\n  configurationId: Utils.getParameterByName('configurationId'),\n  botUserId: Utils.getParameterByName('botUserId'),\n  context: Utils.getParameterByName('context') ? `/${Utils.getParameterByName('context')}` : '',\n  host: `${window.location.protocol}//${window.location.hostname}:${window.location.port}`,\n};\n\nconst dependencies = [\n  'ui',\n  'modules',\n  'applications-nav',\n  'account',\n  'integrationConfigService',\n  'stream-service',\n  'integration-config',\n];\n\n// create our own service\nconst listService = SYMPHONY.services.register(`${params.appId}:controller`);\n\nfunction registerApplication() {\n  // system services\n  const uiService = SYMPHONY.services.subscribe('ui');\n  const modulesService = SYMPHONY.services.subscribe('modules');\n\n  uiService.registerExtension(\n    'app-settings',\n    params.appId,\n    `${params.appId}:controller`,\n    { label: 'Configure' }\n  );\n\n  listService.implement({\n    trigger() {\n      const url = [\n        `${params.host + params.context}/app.html`,\n        `?configurationId=${params.configurationId}`,\n        `&botUserId=${params.botUserId}`,\n        `&id=${params.appId}`,\n      ];\n\n      // invoke the module service to show our own application in the grid\n      modulesService.show(\n        params.appId,\n        { title: config.app_title },\n        `${params.appId}:controller`,\n        url.join(''),\n        { canFloat: true },\n      );\n    },\n  });\n}\n\nfunction helloController() {\n  SYMPHONY.application.register(\n    params.appId,\n    dependencies,\n    [`${params.appId}:controller`]\n  ).then(registerApplication);\n}\n\nSYMPHONY.remote.hello().then(helloController);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/controller.js\n **/","/* eslint-disable no-console*/\n/* eslint-disable no-debugger */\nexport const Utils = (function utils() {\n  const pub = {};\n  const userRooms = [];\n\n  const timestampToDate = (_ts) => {\n    const date = new Date(Number(_ts));\n    const monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n    const month = monthNames[date.getMonth()];\n    return `${month} ${date.getDate()}, ${date.getFullYear()}`;\n  };\n\n  pub.getParameterByName = (_name, _url) => {\n    let [name, url] = [_name, _url];\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n    const results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  };\n\n  pub.normalizeInstanceList = (rawInstanceList) => {\n    const instances = [];\n    let op; // parsed optional properties\n    for (const obj in rawInstanceList) {\n      if (obj) {\n        op = JSON.parse(rawInstanceList[obj].optionalProperties);\n        instances.push({\n          instanceId: rawInstanceList[obj].instanceId,\n          name: rawInstanceList[obj].name,\n          lastPosted: op.lastPostedDate ? timestampToDate(op.lastPostedDate) : 'not available',\n          created: rawInstanceList[obj].createdDate ?\n            timestampToDate(rawInstanceList[obj].createdDate) : 'not available',\n          streamType: op.streamType,\n          streams: op.streams || [],\n          postingLocationRooms: [],\n          notPostingLocationRooms: [],\n        });\n      }\n    }\n\n    // store all posting location rooms into instances...\n    instances.map((instance) => {\n      if (instance.streamType === 'CHATROOM') {\n        instance.streams.map(stream =>\n          instance.postingLocationRooms.push(\n            userRooms.filter(userRoom => stream === userRoom.threadId)[0])\n        );\n      }\n      return instance;\n    });\n\n    // stores all indexes of the rooms (object) that are not posting locations into an array\n    let idx,\n      aux;\n\n    instances.map((instance) => {\n      idx = [];\n      aux = userRooms.slice();\n      instance.streams.map((stream) => {\n        for (let k = 0, n = aux.length; k < n; k += 1) {\n          if (aux[k].threadId === stream) {\n            idx.push(k);\n          }\n        }\n        return idx;\n      });\n      // remove from the user rooms array all those are posting locations rooms\n      for (let i = 0, n = aux.length; i < n; i += 1) {\n        for (let j = 0, l = idx.length; j < l; j += 1) {\n          if (i === idx[j]) {\n            aux.splice(i, 1);\n            idx.splice(j, 1);\n            for (let k = 0, s = idx.length; k < s; k += 1) idx[k] -= 1;\n            i -= 1;\n            break;\n          }\n        }\n      }\n      instance.notPostingLocationRooms = aux.slice();\n      return instance;\n    });\n    return instances;\n  };\n\n  pub.getUserRooms = (rooms) => {\n    const regExp = /\\//g;\n\n    for (const obj in rooms) {\n      if (rooms[obj].userIsOwner) {\n        rooms[obj].threadId = rooms[obj].threadId.replace(regExp, '_').replace('==', '');\n        userRooms.push({\n          threadId: rooms[obj].threadId,\n          name: rooms[obj].name,\n          creatorPrettyName: rooms[obj].creatorPrettyName,\n          memberCount: rooms[obj].memberCount,\n          publicRoom: rooms[obj].publicRoom,\n          streamType: rooms[obj].roomType,\n        });\n      }\n    }\n    return userRooms;\n  };\n  return pub;\n}());\n\nexport function copyToClipboard(target, cb) {\n  // Copy to clipboard without displaying an input...\n  const textarea = document.createElement('textarea');\n  textarea.style.position = 'relative';\n  textarea.style.top = 0;\n  textarea.style.left = 0;\n  textarea.style.width = '1px';\n  textarea.style.height = '1px';\n  textarea.style.padding = 0;\n  textarea.style.border = 0;\n  textarea.style.outline = 0;\n  textarea.style.boxShadow = 0;\n  textarea.style.background = 'transparent';\n  textarea.style.fontSize = 0;\n\n  const webhookUrl = document.querySelector(target.dataset.copytarget) ?\n    document.querySelector(target.dataset.copytarget).getAttribute('data-value') : null;\n\n  textarea.value = webhookUrl;\n\n  if (textarea) {\n    target.parentNode.appendChild(textarea);\n    textarea.select();\n    try {\n      // copy text\n      document.execCommand('copy');\n      target.innerHTML = 'Copied!';\n      setTimeout(() => {\n        target.innerHTML = 'Copy URL';\n        target.parentNode.removeChild(target.parentNode.getElementsByTagName('textarea')[0]);\n        cb(true);\n      }, 2000);\n    } catch (err) {\n      console.error(err);\n    }\n  } else {\n    console.error(`element not found ${textarea}`);\n  }\n}\n\nObject.freeze(Utils);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/utils.service.js\n **/","export default ({\n  app_title: 'Configure JIRA',\n  app_name: 'JIRA',\n  IM_shorthand: 'JIRA', // will display \"One on One with JIRA\"\n  toogleSetupInstructions: true,\n  logo: 'jira_logo.png',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/config.service.js\n **/"],"sourceRoot":""}